{"course": "cs_246", "description": "Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites. [Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]", "reviews": ["The only drawback of this course is everything is written on blackboard and course notes are never posted. Otherwise, covers everything you need to know about OOP, a must for industry jobs. C++ is used, once you master it, other languages definietely become easier to learn compared to C++. The midterm wasn't the best, average was 59, but the project and final are the lifesavers tho.", "Presented all you need to build a strong foundation for OOP. Lectures given by Brad were really engaging and clear. Assignments are challenging and time-consuming but really help integrate everything learned in class together. Midterm was a disaster with a 50-ish average, final became much easier after you've spent enough time with C++ and everything really came together.", "Assignments took a lot of time, final project was in groups so make sure to plan ahead and try to find a group early.", "+1 Caroline Kierstead", "All the tools needed to write programs with strong object-oriented design. You learn many concepts and tools you will use abundantly beyond this course. Assignments can take some time but aren't too difficult. People lost lots of marks on the midterm. The project is fun.", "Very useful course, but it is also difficult and a lot of work. You have to stay on top of lectures and assignments not to get lost. I almost failed this course because I wasn't doing good on the assignments. The final group project was actually very interesting. Looking back, I have learned SO much about OOP, stuff like constructors, destructors, inheritance, etc.", "Transitioning from C to C++ was like exploring a whole new ocean coming from a sea. Although some syntax did translate, the new content of OOP was very heavy. If you missed a lecture, you'd most likely be lost. I would say the assignments are the toughest part of the course. The midterm and final was fine if you attended tutorials (Final Exam Review by Tabitha was very helpful). Be sure to find a good partner for the project. Besides that, I would really recommend Ross Evans, he goes through the content thoroughly and explains well.", "Lectures are mandatory, as notes are not posted. (However, there are notes from previous terms online.) Midterm was very long (20+ pgs). A4 and A5 were difficult and required many hours, but it was satisfying to create your own working game.", "This course was the highlight of my 2A term, the final project - while a lot of work - was incredibly fun to work on and I actually got to use the content presented in class, like design patterns to make previously very difficult implementations easy.", "This course is good.", "Took online F21. Pretty good introduction to OOP and C++ (which is really important considering so many other UW CS courses use C++). Memory management and debugging was a pain but a good precedent for what upper year courses are like. Assignments were similar in difficulty to 136, but a bit trickier, final project was relatively easy but fun.", "This course forces you to really understand what is happening under the hood of a programming language, and requires a serious time investment. The latter half of the course required tons of time and the midterm was quite difficult. This being said, both the final project and the final exam were marked pretty easily. Take this with a grain of salt, as I think they're changing the structure of the course next year.", "Midterm was really tough, but the profs graded the final project and final exam lightly. Only problem was really the lack of course notes, but the tutorials were really helpful.", "Go to the lectures, especially don't ignore the tutorials, TAs this term (F22) were absolutely GOATed.", "This is a difficult, but important course for CS students. OOP is a fundamental skill in the industry. The final project will be useful for your own knowledge and project portfolio. Pay attention to the lectures. They are very fast-paced and you may find yourself quickly lost if you don't review the past content before a lecture. Studying for exams is hard (midterm average was like 57). No lecture slides are posted. You must review your notes and come up with your own practice problems. If I were to redo this course, I would go to tutorials to look at concrete examples of design patterns, iterators, polymorphism, etc. Assignments are tough, so start early. The piazza for this course is fairly good - responses are quick. However, I got ghosted by the profs a couple of times. Maybe they thought my questions were obvious or had been addressed in tutorials. Go to office hours if absolutely stuck. There are probably other students there who will help you. I came into the course with no prior knowledge of OOP, which made it very difficult. I was surprised to see that I passed by a good margin. Glad I took the course though!", "Most useful CS course by far. You will be introduced to and get very familiar with C++ (maybe a bit more than you'd like lol), and learn various design patterns. Midterm is rough but the final lets you make up for it. Profs are extremely helpful, make use of office hours if you must. There are no course notes, but you should be attending lectures anyway since the profs are pretty good. Assignments can get a bit tough, and the final project can be extremely fun or a nightmare based on how you make of it.", "One of the most useful CS courses, you learn about useful stuff like Bash and Linux and Regex in the first part (which is getting moved to 136L), and then it gives you a pretty good overview of C++ OOP and design patterns. Profs clearly cared a lot, and while the workload could be a bit heavy at times (although not as bad as they warned about), getting good marks was pretty easy if you tried. Midterm was rough but the easy final and lenient final project grading made up for it. Pick a good group for the project, and find some course notes online since they don't post any.", "For the final- MEMORIZE THE DESIGN PATTERNS. I played myself thinking there's no way we'd be ask to implement entire design patterns... we were asked to implement three. So make sure that you thoroughly understand the usage and implementation of literally every design pattern you learn for the final.", "w course", "really hard if you don't know what you're doing, probably easy if you know what you're doing. final project goes hard (mark boost), midterm is rough, but the final exam is alright.", "Even though OOP is useful, the Bash stuff we learned was still the most useful thing. That's being moved to 136L though. This course was really interesting and fun but incredibly frustrating. The assignments are split over 2 weeks where you write test cases and UML stuff for week 1 and actually code for week 2. It really helps you see how useful tests are especially when they're already written when you need them. Midterm/final have a knowledge portion where you need to be able to explain why things are the way they are. The rest is coding on paper which isn't super horrible. Start all your assignments really early or you'll regret it. Learn how to use git and start the final project the minute you get it. You'll put every other class aside and spend 50 hours a week on it but it's so cool! They never posted lecture notes or even tl;dr on what was covered which is really shit so go to class and make sure your friends are there when you're sick.", "Really loved this course, it teaches you so many great industry tools for C++ and sets you up really well if you're interested in pursuing an internship in software engineering. Lots of design patterns, templates, and the final project was really rewarding to make!", "Not easy but having a project as final assessment is reasonable", "Don\u2019t memorize syntax. Treat C++ syntax as a set of rules to understand and the course becomes trivial. Midterm was harsh.", "Probably the most useful course you will take up until 2A. Pretty much 4 assignments + final project, then your standard midterm and exam. The assignments were very possible to get 100 in if you started early and wrote good tests. Like 30% of your mark on all assignments is just test cases, so make sure you write good ones. The final project was pretty fun, and the grading was very lenient (average of 96 for the course). Midterms and exams were hard but as long as you can do the assignments on your own, you will be fine!", "Pretty heavy course, a lot of concepts are covered. Towards the end, there was definitely a rush to cover everything. Midterm was difficult, direct curve. Assignments can be heavy (esp the last one) and they usually have vague, long instructions, so make sure you clarify/read through carefully. They're removing bash and linux, so hopefully it makes the C++ and OOP content more in-depth. Overall, the course is useful, but somewhat disorganized.", "Course teaches really good concepts overall and content within C++. However course has no real course notes so going to lectures is really important. Assignments are reasonable if you start early enough and final project was actually fun with fairly straightforward marking scheme for the actual code portion.", "Move around between sections to find the prof that teaches you the best. Use previous year's slides if they don't provide them, as they have the exact same content. (Course is changing W23 a lot, so take people's advice with a grain of salt)", "Horrible course design. It's super disorganized and all info is on piazza which is a shit hole to explore, no course notes so good luck if you missed a lecture, lectures are verbal and handwritten so good luck studying between your notes on one screen and VSCode on another. They don't even teach you to use VSCode they encourage Vim which is slow and clunky to use. Super heavy course load, although maybe the organization of the course contributed to that. That being said, TA's are a lifesaver and office hours will save your ass. Overall a really good course to take but you'll hate yourself for taking it every day.", "___Awfully___ organized with bad workload. C++ makes me feel bad about myself and my life every time I interact with it.", "the workload is heavy, really really heavy, especially toward the end. but teach you cool concepts and assignments are ace-able if you start early. the course doesn't have a course note which is... not logical. find a course note on the internet. always attend lectures, sometimes they teach you things beyond the course or some tips that will come up on the exams. exams were not hard if you knew the material. I think C++ is actually a really good fit for this course because of numerous things I won't go into detail about here. I did the final project on my own and got a 90. If you think you have the guts to do it alone, do it. because i belive the most problematic part of our teams was multiple people designed and shared their ideas about how we should do the project but on person ended up writing the code all by himself :). still, if you can do it on a team of people you know and who are hardworking.", "Probably the most important CS course you will ever take.", "The lectures honestly felt very just 'oh here's a cool trick to solve this problem' repeatedly. It's cool that everything is automated with their assignments being on git and all, but sometimes when things are unclear the instructors will make note on Piazza but not change the assignment file itself. The midterm was pretty difficult for most people, but the final probably was a little bit better. The course would've probably been easier to digest if they shared the notes they were writing down, but overall the assignments were helpful in making sure your knowledge was solidified.", "hard", "you learn c++. great. only problem is a lack of course notes, but prof was so good I didn't really need them. just get a good group for a5 and don't procrastinate on it or else you'll end up writing 3500 lines of code for a half functioning project. otherwise, pretty fun and cool course", "Best CS course as of 2B. You'll learn OOP and C++, two of the most coveted skills for programming jobs (you used to learn Linux as well, but I pushed that part to CS 136L, which you hopefully enjoyed). At the end of the course there's a final group project. Make sure you get good groupmates who will put in their share of the work. There's also design stuff for this, which involves UML diagrams and a lot of writing. The way I sorted it with my groupmates was I'll do all the coding and they handle the writing. I'm a neat freak when it comes to coding and I'll document everything extensively and use constants etc, so I found it nice to look back and go \"cool, I wrote that in good style.\" Use only smart pointers for the whole course, and use CLion, it's debugger will save you at 3am.", "Time-killer course, but I would agree that what I learn in this course is more than what I learn in all other 1st and 2nd-year courses!", "a lot of coding, but sooo enjoyable. the final project is a grade booster and it's so nice to show off at the end. c++ is my fav language now.", "The assignments took me so long, it definitely wasn't easy. Definitely the hardest CS course I've taken yet. C++ kicked my butt. This course is quite important, so pay attention! I took it online in Spring 2021, there was a final project (no exam)", "CS246 has been one of (if not) my favorite courses in undergrad. The assignments provide a fun challenge and the group final project really pushes your ability to build something under a time constraint. Be prepared to work hard. You will learn a lot.", "Definitely one of the most useful courses I've taken in undergrad, especially if you do any C++11 or newer for your coops. Covers many relevant C++ specific topics, such as virtual methods and how they work under the hood, the big five, RAII, some parts from the STL such as smart pointers, and other OOP concepts and C++ design patterns.", "Great course to learn about OOP and Linux! Lots of content, 5 heavy programming assignments, midterm and final. Assignments are LONG but not too difficult if you start early and do bits each day. A4 was the hardest for me. You NEED to stay ontop of your stuff in this course.", "Took in Fall 2021. Expect to spend 15+ hours/week just to do the assignments in this course. Workload is really heavy, but the material is very useful and has lots of applications for co-op jobs. I honestly hated this course because of the workload and broad range of course content; the assignments were literally the most frustrating thing ever and took forever to crack. Final project was difficult but still fun to do. Course content covered a lot of stuff, ranging from BASH scripts, to C++ syntax, classes, polymorphism, and smart pointers. Despite me not liking the course overall, the instructors/course staff were amazing and always willing to help. Office hours could be improved however, given the amount of people coming to them. Advice: DO NOT SLACK ON THE ASSIGNMENTS", "Pretty code-heavy course; I personally struggled a bit on it. A3, a5, and the final project literally took forever. Huge time drain but ended up ok, just start early.", "Good course. I learned a lot about C++ and how to design OOP programs. I came from advanced first year courses, so having no release tokens (a way to see the number of test cases you passed) made it much more difficult. Fortunately, the instructors encouraged testing and even gave us marks for making our own tests. To be honest, the assignments weren't very interesting, but I still think they were useful. I found the quizzes easy since most of the questions I could just type in an editor and run some code to double check my answers. I took this course online, so all I had were assignments, quizzes, and a final project. I did the one-person project (I recommend choosing this if you just want to save time). It was pretty simple to do and can be implemented in one or two day if you create a good design. For the more difficult assignments, I recommend starting right away as they can be hard to debug and implement.", "Was online so no way to understand the last two assignments. Generous curve though", "very useful course! start assignments early and you'll be fine. I found this course to be super easy because of it.", "Fall 2021 online semester consisted of 5 assignments, some quizzes, and a final project. Main programming language is C++ (with some terminal/scripting stuff). Course content was very useful but very challenging, even when coming from a programming/coding background. Expect a heavy workload!", "Hard assignments but if you put in the time and start early, you will finish them easily. Project based class with not much stress on theory.", "By far my favorite course that I took in 2A. The content covered was extremely interesting and practical. You also learn C++ in this course which is super useful. In terms of assessments, there were only 5 assignments and 1 final project. I personally found the assignments to not really be too difficult at all. The difficulty of each assignment I would say was on par to your average CS135 or CS136 assignment. If anything, on average they were a tad bit easier and there are a lot less assignments compared to those courses. The final project was also not difficult, but just long and fairly time consuming.", "It's a very fun course. The projects, assignments, and lectures are all interesting. It's not easy at all, but it's not as bad as many students describe if you dedicate enough time to the assignments and the project.", "nice course, nice content c++ is cool, very very very accommodating course staff", "I came to respect this course. The assignments for the most part actually tested the content being taught without forcing unnecessary requirements.", "One of the most useful course that I have taken. I am on my co-op work term and the contents learned in this course are proving to be very helpful. I can see how learning these contents can be extremely useful to other CS jobs as well, especially the basics of Bash, C++, and UML diagrams. The main challenge in this course is time management. The assignments (especially the final project) takes a lot of time, but very doable. Piazza questions are answered fast by professors as well, and office hours are provided throughout the week.", "My favorite class in 2A (taken alongside CS 245 and STAT 230). There are no formal assessments like midterm and exam. Instead, there are 5 assignments and one final project. The content builds on top of another so doing the assignments also helped me reinforce my knowledge. After completing the course and reviewing the contents just days ago, I can definitely say with confidence that I will use this knowledge in my upcoming co-op. This would probably be one of the most applied and relevant CS courses you will take. On another note, the instructors were super helpful on Piazza, especially Prof. Kierstead, which made me feel the instructors do care about the success of the students. Overall an extremely fun course to take, just try your best to stay on top of the material as it's pretty easy to fall behind since there's a lot of notes.", "Definitely very useful, but it goes really fast. Try to keep up and you'll be fine.", "Easily my favourite CS course so far! I wouldn\u2019t say it\u2019s that difficult, but it is time consuming.", "This course is fine until A4...", "Best course at UW so far. The content is expansive and perhaps this course could even be divided into two so that there is more time to learn advanced design patterns and other concepts. The assignments are easier than CS136 in terms of coming up with algorithms to solve a problem, but designing that very solution and its interface is where the real challenge of this course kicks in. Loved every bit of the assignments, and I felt they covered a lot of the fundamental learning objectives of the course. Everything about this course is perfect and enjoyable. +Rep", "It definitely helps shift your mindset."]}